spring:
  graphql:
    graphiql:
      enabled: true
  profiles:
    active: dev
  sql:
    init:
      mode: always
  jpa:
    generate-ddl: true
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  datasource:
    hikari:
      minimumIdle: 2
      maximumPoolSize: 10
      idleTimeout: 120000
      connectionTimeout: 300000
      leakDetectionThreshold: 300000
springdoc:
  api-docs:
    path: /api-docs
application:
  security:
    jwt:
      access:
        key: ${JWT_ACCESS_SECRET}
        expiration: ${JWT_ACCESS_SECRET_EXPIRE}
      refresh:
        key: ${JWT_REFRESH_SECRET}
        expiration: ${JWT_REFRESH_SECRET_EXPIRE}
---
spring:
  config:
    activate:
      on-profile: dev
  jpa:
    defer-datasource-initialization: true
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://postgres:5432/discord_db
    username: postgres
    password: postgres
server:
  port: 8080

---
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://postgres:5432/discord_db
    username: postgres
    password: postgres
server:
  port: 8080
